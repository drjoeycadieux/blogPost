{
  "version": 3,
  "sources": ["../../../app/routes/posts.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\posts.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\posts.new.tsx\");\n  import.meta.hot.lastModified = \"1752660412759.9336\";\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const content = formData.get(\"content\");\n  if (!title || !content) {\n    throw new Error(\"Title and content are required\");\n  }\n  await db.post.create({\n    data: {\n      title,\n      content,\n      published: true\n    }\n  });\n  return redirect(\"/\");\n};\nexport default function NewPost() {\n  return <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 py-8\">\r\n            <div className=\"max-w-2xl mx-auto px-4\">\r\n                <h1 className=\"text-3xl font-bold text-gray-800 dark:text-gray-100 mb-8\">\r\n                    Create New Post\r\n                </h1>\r\n\r\n                <Form method=\"post\" className=\"space-y-6\">\r\n                    <div>\r\n                        <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                            Title\r\n                        </label>\r\n                        <input type=\"text\" name=\"title\" id=\"title\" required className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                            Content\r\n                        </label>\r\n                        <textarea name=\"content\" id=\"content\" required rows={10} className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white\" />\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-end gap-4\">\r\n                        <a href=\"/\" className=\"inline-block px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100\">\r\n                            Cancel\r\n                        </a>\r\n                        <button type=\"submit\" className=\"inline-block bg-blue-600 px-4 py-2 text-sm font-medium text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\r\n                            Create Post\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>;\n}\n_c = NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAoBA,kBAAyB;AAEzB,gBAAmB;AAsBH;AA3ChB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AAwBe,SAAR,UAA2B;AAChC,SAAO,mDAAC,SAAI,WAAU,kDACZ,6DAAC,SAAI,WAAU,0BACX;AAAA,uDAAC,QAAG,WAAU,4DAA2D,+BAAzE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,QAAK,QAAO,QAAO,WAAU,aAC1B;AAAA,yDAAC,SACG;AAAA,2DAAC,WAAM,SAAQ,SAAQ,WAAU,8DAA6D,qBAA9F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,WAAM,MAAK,QAAO,MAAK,SAAQ,IAAG,SAAQ,UAAQ,MAAC,WAAU,2LAA9D;AAAA;AAAA;AAAA;AAAA,eAAsP;AAAA,WAJ1P;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MAEA,mDAAC,SACG;AAAA,2DAAC,WAAM,SAAQ,WAAU,WAAU,8DAA6D,uBAAhG;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,cAAS,MAAK,WAAU,IAAG,WAAU,UAAQ,MAAC,MAAM,IAAI,WAAU,2LAAnE;AAAA;AAAA;AAAA;AAAA,eAA2P;AAAA,WAJ/P;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MAEA,mDAAC,SAAI,WAAU,0BACX;AAAA,2DAAC,OAAE,MAAK,KAAI,WAAU,4HAA2H,sBAAjJ;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,YAAO,MAAK,UAAS,WAAU,0KAAyK,2BAAzM;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,SAtBJ;AAAA;AAAA;AAAA;AAAA,WAuBA;AAAA,OA5BJ;AAAA;AAAA;AAAA;AAAA,SA6BA,KA9BH;AAAA;AAAA;AAAA;AAAA,SA+BD;AACR;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
